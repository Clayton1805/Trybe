{"ast":null,"code":"var _jsxFileName = \"/home/clayton/desenvolvimento/Aulas Trybe/exercises/12_1 estado e eventos React/aula Exemplo De Ficsa\\xE7\\xE3o/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = () => {\n      /* Passando uma callback à função setState, que recebe de parâmetros\n      o estado anterior e as props do componente, você garante que as atualizações\n      do estado acontecerão uma depois da outra! */\n      this.setState((estadoAnterior, _props) => ({\n        numeroDeCliques: estadoAnterior.numeroDeCliques + 1\n      })); // console.log('handleClick');\n\n      this.parGreen();\n    };\n\n    this.parGreen = () => {\n      console.log('GREEN');\n      const numberClick = this.state.numeroDeCliques;\n\n      if (numberClick % 2 === 0) {\n        return 'green';\n      }\n\n      return '';\n    };\n\n    this.parGreen = this.parGreen.bind(this);\n    this.state = {\n      numeroDeCliques: 0\n    }; // console.log('constructor');\n  }\n\n  render() {\n    // console.log('render');\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: 'green',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }, this.state.numeroDeCliques);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/clayton/desenvolvimento/Aulas Trybe/exercises/12_1 estado e eventos React/aula Exemplo De Ficsação/src/App.js"],"names":["React","App","Component","constructor","handleClick","setState","estadoAnterior","_props","numeroDeCliques","parGreen","console","log","numberClick","state","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,WATc,GASA,MAAM;AAClB;;;AAGA,WAAKC,QAAL,CAAc,CAACC,cAAD,EAAiBC,MAAjB,MAA6B;AACzCC,QAAAA,eAAe,EAAEF,cAAc,CAACE,eAAf,GAAiC;AADT,OAA7B,CAAd,EAJkB,CAOlB;;AACA,WAAKC,QAAL;AACD,KAlBa;;AAAA,SAmBdA,QAnBc,GAmBH,MAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWL,eAA/B;;AACA,UAAII,WAAW,GAAG,CAAd,KAAoB,CAAxB,EAA2B;AACzB,eAAO,OAAP;AACD;;AACD,aAAO,EAAP;AACD,KA1Ba;;AAEZ,SAAKH,QAAL,GAAgB,KAAKA,QAAL,CAAcK,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKD,KAAL,GAAa;AACXL,MAAAA,eAAe,EAAE;AADN,KAAb,CAHY,CAMZ;AACD;;AAqBDO,EAAAA,MAAM,GAAG;AACP;AACA,wBAAO;AAAQ,MAAA,OAAO,EAAE,KAAKX,WAAtB;AAAmC,MAAA,SAAS,EAAE,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwD,KAAKS,KAAL,CAAWL,eAAnE,CAAP;AACD;;AAhC+B;;AAmClC,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.parGreen = this.parGreen.bind(this);\n    this.state = {\n      numeroDeCliques: 0\n    }\n    // console.log('constructor');\n  }\n\n  handleClick = () => {\n    /* Passando uma callback à função setState, que recebe de parâmetros\n    o estado anterior e as props do componente, você garante que as atualizações\n    do estado acontecerão uma depois da outra! */\n    this.setState((estadoAnterior, _props) => ({\n      numeroDeCliques: estadoAnterior.numeroDeCliques + 1\n    }))\n    // console.log('handleClick');\n    this.parGreen();\n  };\n  parGreen = () => {\n    console.log('GREEN')\n    const numberClick = this.state.numeroDeCliques;\n    if (numberClick % 2 === 0) {\n      return 'green';\n    }\n    return '';\n  };\n\n  render() {\n    // console.log('render');\n    return <button onClick={this.handleClick} className={'green'}>{this.state.numeroDeCliques}</button>\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}